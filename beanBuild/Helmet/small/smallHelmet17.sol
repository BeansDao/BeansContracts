// SPDX-License-Identifier: MIT
pragma solidity ^0.8.2;

pragma abicoder v2;

import "@openzeppelin/contracts/utils/Strings.sol";
import "@openzeppelin/contracts/utils/math/SafeCast.sol";


    /// @title Accessory SVG generator
    contract smallHelmet17 {


        /// @dev Accessory N°1 => Classic
        function SH0(
            string memory PRIM,
            string memory SEC
        ) internal pure returns (string memory, string memory)
            {
            return
              ("Finni",
                string(abi.encodePacked(
                  "<defs><linearGradient id='linear-gradient' x1='960' y1='841.97' x2='960' y2='479.31' gradientUnits='userSpaceOnUse'><stop offset='0' stop-opacity='0.5'/><stop offset='0.14' stop-opacity='0.23'/><stop offset='1' stop-opacity='0'/></linearGradient></defs><g id='_4-HelmetSmall' data-name='4-HelmetSmall'><g id='Finni'><path id='GB-03-Solid' d='M517.28,842c-72-17.56-160.08-49.74-172.79-59-16.86-12.36-15.87-33.57-4.3-67.42S379.1,638.12,387,627.16c3.83-5.33,11.66-14.81,24.74-9.54,5.25,2.12,14.13,7.42,28.35,11.21s12.56-8.07,9.7-17.6c-1.91-6.37-5.76-20.55-10.36-40.47-5.65-24.45-6.61-34.44,13.89-46.7s59.51-31.51,78-40.27,39.68-4.09,49.6,8.76c6.69,8.67,55.42,75.76,86.35,118.42A459.69,459.69,0,0,0,517.28,842ZM1579.81,715.51c-11.57-33.85-38.91-77.39-46.76-88.35-3.83-5.33-11.66-14.81-24.73-9.54-5.26,2.12-14.14,7.42-28.36,11.21s-12.56-8.07-9.7-17.6c1.91-6.37,5.76-20.55,10.36-40.47,5.65-24.45,6.61-34.44-13.88-46.7s-59.52-31.51-78-40.27-39.68-4.09-49.6,8.76c-6.69,8.67-55.42,75.76-86.35,118.42a459.69,459.69,0,0,1,150,231c72-17.55,160.09-49.74,172.79-59C1592.37,770.57,1591.38,749.36,1579.81,715.51Z' style='fill:#",
                  PRIM,
                  "'/><path id='Grad' d='M517.28,842c-72-17.56-160.08-49.74-172.79-59-16.86-12.36-15.87-33.57-4.3-67.42S379.1,638.12,387,627.16c3.83-5.33,11.66-14.81,24.74-9.54,5.25,2.12,14.13,7.42,28.35,11.21s12.56-8.07,9.7-17.6c-1.91-6.37-5.76-20.55-10.36-40.47-5.65-24.45-6.61-34.44,13.89-46.7s59.51-31.51,78-40.27,39.68-4.09,49.6,8.76c6.69,8.67,55.42,75.76,86.35,118.42A459.69,459.69,0,0,0,517.28,842ZM1579.81,715.51c-11.57-33.85-38.91-77.39-46.76-88.35-3.83-5.33-11.66-14.81-24.73-9.54-5.26,2.12-14.14,7.42-28.36,11.21s-12.56-8.07-9.7-17.6c1.91-6.37,5.76-20.55,10.36-40.47,5.65-24.45,6.61-34.44-13.88-46.7s-59.52-31.51-78-40.27-39.68-4.09-49.6,8.76c-6.69,8.67-55.42,75.76-86.35,118.42a459.69,459.69,0,0,1,150,231c72-17.55,160.09-49.74,172.79-59C1592.37,770.57,1591.38,749.36,1579.81,715.51Z' style='fill:url(#linear-gradient)'/><path id='Shad' d='M1432.87,834.06c-10.19,2.85-20.32,5.51-30.15,7.91a459.69,459.69,0,0,0-150-231l7.91-10.91C1339.93,662,1399.55,745.39,1432.87,834.06Zm-945.74,0c10.2,2.84,20.32,5.51,30.15,7.91a459.69,459.69,0,0,1,150-231l-7.91-10.91C580.07,662,520.45,745.39,487.13,834.06Z' style='fill:#40444c;opacity:0.2'/><path id='Hi' d='M1481.86,565.21c-.22-.84-.41-1.63-.58-2.33-5.4-23.06-7.61-27.57-55.61-51.57-43.66-21.84-52.11-28.11-81.21-24.1,11-8.63,28.59-10.82,44.25-3.42,18.51,8.76,57.53,28,78,40.27C1485.61,535.35,1486.28,544.72,1481.86,565.21Zm51.19,61.95c-3.71-5.17-11.19-14.24-23.57-10a2.09,2.09,0,0,0,.46.26c18.56,4.31,76.51,121.42,74.06,154.39,0,.6,0,1.2,0,1.8,7.44-12.83,4.87-31.59-4.2-58.13C1568.24,681.66,1540.9,638.12,1533.05,627.16ZM575.54,487.21c-11-8.63-28.59-10.82-44.25-3.42-18.51,8.76-57.53,28-78,40.27-18.88,11.29-19.55,20.66-15.13,41.15.22-.84.41-1.63.58-2.33,5.4-23.06,18-32.43,53.62-50.24C530.36,493.63,546.44,483.2,575.54,487.21ZM410.06,617.45a4.17,4.17,0,0,0,.46-.26c-12.38-4.27-19.86,4.8-23.57,10-7.85,11-35.19,54.5-46.76,88.35-9.07,26.54-11.64,45.3-4.2,58.13,0-.6,0-1.2,0-1.8C336.33,730.39,387,627.16,410.06,617.45Z' style='fill:#fff;opacity:0.2'/><path id='Outline' d='M517.28,842c-72-17.56-160.08-49.74-172.79-59-16.86-12.36-15.87-33.57-4.3-67.42S379.1,638.12,387,627.16c3.83-5.33,11.66-14.81,24.74-9.54,5.25,2.12,14.13,7.42,28.35,11.21s12.56-8.07,9.7-17.6c-1.91-6.37-5.76-20.55-10.36-40.47-5.65-24.45-6.61-34.44,13.89-46.7s59.51-31.51,78-40.27,39.68-4.09,49.6,8.76c6.69,8.67,55.42,75.76,86.35,118.42A459.69,459.69,0,0,0,517.28,842ZM1579.81,715.51c-11.57-33.85-38.91-77.39-46.76-88.35-3.83-5.33-11.66-14.81-24.73-9.54-5.26,2.12-14.14,7.42-28.36,11.21s-12.56-8.07-9.7-17.6c1.91-6.37,5.76-20.55,10.36-40.47,5.65-24.45,6.61-34.44-13.88-46.7s-59.52-31.51-78-40.27-39.68-4.09-49.6,8.76c-6.69,8.67-55.42,75.76-86.35,118.42a459.69,459.69,0,0,1,150,231c72-17.55,160.09-49.74,172.79-59C1592.37,770.57,1591.38,749.36,1579.81,715.51Z' style='fill:none;stroke:#000;stroke-linecap:round;stroke-linejoin:round;stroke-width:4px'/></g></g>"
                ))
              );
            }

        /// @dev Accessory N°1 => Classic
        function SH1(
            string memory PRIM,
            string memory SEC
        ) internal pure returns (string memory, string memory)
            {
            return
                ("FlameCrown",
                  string(abi.encodePacked(
                    "<defs><linearGradient id='linear-gradient' x1='961.93' y1='659.86' x2='961.93' y2='275.97' gradientUnits='userSpaceOnUse'><stop offset='0' stop-opacity='0.5'/><stop offset='0.14' stop-opacity='0.23'/><stop offset='1' stop-opacity='0'/></linearGradient></defs><g id='_4-HelmetSmall' data-name='4-HelmetSmall'><g id='FlameCrown'><path id='GB-03-Solid' d='M656.17,393.53c5.09,12.14,5,28.42-.39,42.89-13.9,37.19-67.84,42-91.62,10.15C548.82,426,550.67,395,568.67,377.34,596.08,350.51,641.9,359.48,656.17,393.53Zm611.72-.37a53.53,53.53,0,0,0-4.63,31.84c8.4,52.59,85.64,61.15,103.37,9.59,9.12-26.53.09-57-27.85-68.13C1311.72,355.65,1280.31,367.24,1267.89,393.16ZM840.87,467c-39.59,2.78-72.06,42.76-70.73,82.53,2.22,66.76,86.68,108.18,183.78,110.25,91.51,2,184.85-35.36,192.77-107.48,4.67-42.54-24.77-76.24-63.68-83.95Z' style='fill:#",
                    PRIM,
                    "'/><path id='GB-04-Solid' d='M851.54,415.15c-25.61,57.18-10.67,149,99.58,153.44S1116.5,460.12,1068.48,381,954.7,267.19,936.9,277.85c-12,7.22,2.7,24.28,5.09,32.52,4.22,14.56-8.33,24.12-18.64,32.52C897.08,364.32,866,383,851.54,415.15Z' style='fill:#",
                    SEC,
                    "'/><path id='Grad' d='M1146.69,552.31c-7.92,72.12-101.26,109.43-192.77,107.48-97.1-2.07-181.56-43.49-183.78-110.25-1.33-39.73,31.08-79.67,70.62-82.51a126.25,126.25,0,0,1,10.78-51.88c14.43-32.2,45.54-50.83,71.81-72.26,10.31-8.4,22.86-18,18.64-32.52-2.39-8.24-17.13-25.3-5.09-32.52,17.8-10.66,83.58,24,131.58,103.14a121.12,121.12,0,0,1,14.9,87.45C1122.11,476.29,1151.34,509.91,1146.69,552.31Zm-578-175c-18,17.62-19.85,48.7-4.51,69.23,23.78,31.83,77.72,27,91.62-10.15,5.41-14.47,5.48-30.75.39-42.89C641.9,359.48,596.08,350.51,568.67,377.34Zm770.11-10.88c-27.06-10.81-58.47.78-70.89,26.7a53.53,53.53,0,0,0-4.63,31.84c8.4,52.59,85.64,61.15,103.37,9.59C1375.75,408.06,1366.72,377.63,1338.78,366.46Z' style='fill:url(#linear-gradient)'/><path id='Shad' d='M659.75,409.25c6.82,76.95-110.17,77.18-105.77.79,2.51,52.15,83.85,63.88,101.8,16.8A60.7,60.7,0,0,0,659.75,409.25Zm412.54-21.5c-.59-1.14-1.2-2.28-1.84-3.4C1071.08,385.48,1071.69,386.61,1072.29,387.75Zm297.59,22.19c-2.94,63.23-101.74,63.35-107.12,2C1258.52,488.18,1376.55,487,1369.88,409.94ZM1146.69,537.59c-13.28,138.07-363.86,133.18-376.21,2.19-24.43,174.35,401,178.94,376.35-3.57C1146.79,536.67,1146.74,537.13,1146.69,537.59ZM949.05,580.05c83.91,3.47,124.13-53.4,122.16-77.65,3.33-6.16,12.37-24.29,12.3-34.61a121.45,121.45,0,0,0-11.22-80c21,74.41-28.23,134-93.42,148.61C909.77,551.8,836.71,510,841.12,456.52c-.25,10.49-.94,27.14,6.87,49.53C843,526.65,874.89,577,949.05,580.05ZM932.28,284.82c-1,9.44,10.16,22.39,10.68,29.48.26,3.48-.87,7.74-2.11,11-2.86,7.5-22,21.14-21.18,20.55,7.6-5.57,9.26-6.6,15.51-9.46,6-2.72,11.06-4.62,16.07-6.36s10.36-2.81,9.75-8.05c-.49-4.09-5.94-7.73-9.1-10C939.11,302.74,934,295.81,932.28,284.82Z' style='opacity:0.2'/><path id='Hi' d='M935.41,376.05c40.88,33.87-31.7,109.52-62.57,74.85-22-24.68,2.47-64.18,29.7-76.71C914.11,368.87,926.19,368.41,935.41,376.05Zm182.77,143.71c-13.27-14-24.73,4.1-30.32,13.7-.16.27-.32.54-.47.81-5.83,9.85-13.13,16.79-22.5,23.12-7.67,5.19-18.59,11.62-18.11,22.32.54,11.9,15.4,15.45,24.94,13.23,18.65-4.34,35.68-19,44-36C1120.56,547.22,1128,530.12,1118.18,519.76Zm-262.75,45c-8.53-6.85-15.72-13.26-21.53-23.21-5.61-9.59-6.73-25.68-18-30.88a13.26,13.26,0,0,0-15.49,3.74c-9.84,11.54-5,30.75,1.23,43.13,13,25.76,38.33,45.11,66.27,49.52,11.6,1.84,26.13-11.7,19.41-22.19C880.21,573.77,868.43,575.23,855.43,564.79ZM608.67,382.85a20.5,20.5,0,0,1-.13,14.57c-4.72,12.63-23,14.26-31.12,3.45-5.21-7-4.58-17.54,1.53-23.52C588.26,368.24,603.83,371.28,608.67,382.85Zm706.67-.33a17.94,17.94,0,0,0-1.56,10.7c2.82,17.69,28.8,20.57,34.76,3.23,3.06-8.92,0-19.15-9.37-22.91C1330.08,369.91,1319.51,373.8,1315.34,382.52ZM1068.48,381c-48-79.12-113.78-113.8-131.58-103.14-4.22,2.53-5.14,6.27-4.47,10.42C947.9,260.82,1030.19,322.77,1068.48,381Z' style='fill:#fff;opacity:0.2'/><path id='Outline' d='M656.17,393.53c5.09,12.14,5,28.42-.39,42.89-13.9,37.19-67.84,42-91.62,10.15C548.82,426,550.67,395,568.67,377.34,596.08,350.51,641.9,359.48,656.17,393.53Zm611.72-.37a53.53,53.53,0,0,0-4.63,31.84c8.4,52.59,85.64,61.15,103.37,9.59,9.12-26.53.09-57-27.85-68.13C1311.72,355.65,1280.31,367.24,1267.89,393.16Zm-416.35,22c-25.61,57.18-10.67,149,99.58,153.44S1116.5,460.12,1068.48,381,954.7,267.19,936.9,277.85c-12,7.22,2.7,24.28,5.09,32.52,4.22,14.56-8.33,24.12-18.64,32.52C897.08,364.32,866,383,851.54,415.15ZM840.87,467c-39.59,2.78-72.06,42.76-70.73,82.53,2.22,66.76,86.68,108.18,183.78,110.25,91.51,2,184.85-35.36,192.77-107.48,4.67-42.54-24.77-76.24-63.68-83.95' style='fill:none;stroke:#000;stroke-linecap:round;stroke-linejoin:round;stroke-width:4px'/></g></g>"
                  ))
                );
            }

        function SH2(
            string memory PRIM,
            string memory SEC
        ) internal pure returns (string memory, string memory)
            {
            return
                ("Drill",
                  string(abi.encodePacked(
                    "<defs><linearGradient id='linear-gradient' x1='960.7' y1='1091.85' x2='960.7' y2='833.69' gradientTransform='matrix(1, 0, 0, 1, 0, 0)' gradientUnits='userSpaceOnUse'><stop offset='0' stop-color='#000' stop-opacity='.5'/><stop offset='.14' stop-color='#000' stop-opacity='.23'/><stop offset='1' stop-color='#000' stop-opacity='0'/></linearGradient></defs><g id='_-HelmetSmall'><g id='Drill'><path id='GB-03-Solid' d='M548.17,1091.85c-17.94-53.33-27.34-109.63-27.34-169.55h0c0-30.22,2.5-59.84,7.27-88.61-101.29,23.7-249.23,70.38-249.23,131.31s155.58,113.8,269.3,126.85Zm1094.36-126.85c0-60.93-147.95-107.62-249.23-131.31,4.77,28.77,7.27,58.39,7.27,88.61h0c0,59.92-9.39,116.22-27.34,169.55,113.72-13.05,269.3-65.92,269.3-126.85Z' style='fill:#",
                    PRIM,
                    ";'/><path id='Grad' d='M548.17,1091.85c-17.94-53.33-27.34-109.63-27.34-169.55h0c0-30.22,2.5-59.84,7.27-88.61-101.29,23.7-249.23,70.38-249.23,131.31s155.58,113.8,269.3,126.85Zm1094.36-126.85c0-60.93-147.95-107.62-249.23-131.31,4.77,28.77,7.27,58.39,7.27,88.61h0c0,59.92-9.39,116.22-27.34,169.55,113.72-13.05,269.3-65.92,269.3-126.85Z' style='fill:url(#linear-gradient);'/><path id='Hi' d='M385.97,876.79c-29,23.9-89.23,53.19-86.44,85.98,3.65,42.78,53.21,59.66,92.56,91.87,0,0-110.82-33.26-113.23-89.64-2.1-49.15,107.11-88.21,107.11-88.21Zm1256.56,88.21c-2.41,56.38-113.23,89.64-113.23,89.64,39.35-32.22,88.91-49.09,92.56-91.87,2.8-32.79-57.44-62.08-86.44-85.98,0,0,109.21,39.06,107.11,88.21Z' style='fill:#fff; opacity:.2;'/><path id='Outline' d='M548.17,1091.85c-17.94-53.33-27.34-109.63-27.34-169.55h0c0-30.22,2.5-59.84,7.27-88.61-93.66,20.76-249.23,70.38-249.23,131.31s165.17,117.08,269.3,126.85Zm1094.36-126.85c0-60.93-155.58-110.55-249.23-131.31,4.77,28.77,7.27,58.39,7.27,88.61h0c0,59.92-9.39,116.22-27.34,169.55,104.13-9.77,269.3-65.92,269.3-126.85Z' style='fill:none; stroke:#000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4px;'/></g></g>"
                  ))
                );
            }



        function getLibraryCount() public pure returns (uint256 ) {
          return 3;

        }

        function getHelmetSvg(string memory one, string memory two, uint256 rand) public pure returns (string memory, string memory ) {
            if (rand == 2) {
                return SH2(one, two);
            } else if (rand == 1) {
                return SH1(one, two);
            } else {
                return SH0(one, two);
            }

        }
    }